#!perl
#
# $Id: McDevitt,v 1.2 2006-02-08 04:48:21 ashted Exp $
# 
# Explore the formulas given by Tim McDevitt in his talk "Differentiating Noisy
# Data", Jan 15, 2006, San Antonio Joint Mathematics Meetings.
#

use strict;
use warnings;
use Math::Random;
use POSIX;

sub pi () { acos(-1) }
sub M () { 7 } # needs to be odd
sub delta_t () { 0.01 }
sub mult () { -12.0/((M-1) * M * (M+1) * delta_t) }

open(OUT,">McDevitt.gnuplot");
my @idx = map { $_*delta_t } (- pi/delta_t..pi/delta_t);
my @rnd = random_normal(scalar(@idx),0,0.01);
my @f = map { ($_+4)*($_+1)*($_+1)*($_-1)*($_-2)*($_-7) } @idx;
my @f_p = map { $f[$_]+$rnd[$_] } (0..$#rnd);
my @deriv = ('',(map { 
    ($f[$_+1]-$f[$_-1])/($idx[$_+1]-$idx[$_-1]) } (1..$#idx-1)),'');
my @deriv_p = ('',(map { 
    ($f_p[$_+1]-$f_p[$_-1])/($idx[$_+1]-$idx[$_-1]) } (1..$#idx-1)),'');
my @dm = ('') x @idx;
my @err = ('') x @idx;
my $err = 0;
foreach ((M-1)/2..$#idx-(M-1)/2) {
  $dm[$_] = 0;
  foreach my $j (1..M) { 
    $dm[$_] += mult*($j - (M+1)/2)*$f_p[$_+(M+1)/2-$j];
  }
  $err[$_] = $deriv[$_] - $dm[$_];
  $err += $err[$_]*$err[$_];
}
$err /= (@idx - (M-1));
$err = sqrt($err);
print OUT join(' ',$idx[$_], $f[$_], $f_p[$_], $deriv[$_], $deriv_p[$_],
                   $dm[$_], $err[$_]),"\n" for (0..$#idx);
close OUT;
open(ERR,">> err_list");
print ERR M," $err\n";
close ERR;
