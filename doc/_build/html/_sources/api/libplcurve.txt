libplcurve package
==================

libplcurve.plcurve module
-------------------------

.. currentmodule:: libplcurve.plcurve

.. autoclass:: PlCurve

   **Static methods which create new PlCurves**

   .. automethod:: from_file

   .. automethod:: random_closed_polygon

   .. automethod:: random_open_polygon

   .. automethod:: random_closed_plane_polygon

   .. automethod:: random_open_plane_polygon

   .. automethod:: random_equilateral_closed_polygon

   .. automethod:: random_equilateral_open_polygon

   .. automethod:: loop_closure

   **Data operation methods**

   .. automethod:: add_component

   .. automethod:: append

   .. automethod:: drop_component

   .. automethod:: resize_colorbuf

   .. automethod:: set_fixed

   .. automethod:: constrain_to_line

   .. automethod:: constrain_to_plane

   .. automethod:: unconstrain

   .. automethod:: remove_constraint

   .. automethod:: remove_all_constraints

   .. automethod:: fix_wrap

   .. automethod:: fix_constraints

   .. automethod:: double_vertices

   **Spline methods**

   .. automethod:: convert_to_spline

   **Geometric information method & attributes**

   .. automethod:: num_edges

   .. automethod:: num_vertices

   .. automethod:: vertex_num

   .. automethod:: cp_num

   .. automethod:: vt_num

   .. automethod:: turning_angle

   .. automethod:: MR_curvature

   .. automethod:: total_curvature

   .. automethod:: total_torsion

   .. automethod:: mean_tangent

   .. automethod:: subarc_length

   .. automethod:: s

   .. automethod:: check_constraint

   .. automethod:: mean_squared_chordlengths

   .. autoattribute:: pointset_diameter

      Calculate the diameter of the PlCurve, thinking of vertices as set of
      points in \\(\\mathbb{R}^3\\).

   **Geometric operation methods**

   .. automethod:: scale

   .. automethod:: fold_move

   .. automethod:: rotate

   .. automethod:: random_rotate

   .. automethod:: translate

   .. automethod:: perturb

   .. automethod:: project

   .. automethod:: delete_arc

   **Symmetry methods**

   (Not yet implemented)

   **Topology methods**

   .. automethod:: classify
